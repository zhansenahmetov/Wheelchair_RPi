"""
This file is responsible for creating the Upload page in the Wheelchair GUI
"""

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Window4_col_new.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#Date
from datetime import datetime
from datetime import date

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
#for database
import pymongo
import pandas as pd
import json
import QT_Helpers as qt_helper
import WMsgWindow as wm

enable_upload = True

class Ui_MainWindow4(object):
    """
    This class creates the Wheelchair GUI's Upload 'tab'
    """
    
    #send CSV file to mongodb
    def sendCSV(self, event=None):
        """
        This function sends the CSV of recorded data to the mongo database

        :param event: unused parameter that may be sent when initiated from a button call
        """
        global enable_upload
        #read the name of the most recent created csv, real time csv file
        if enable_upload:
            enable_upload = False
            file1=open("csvName.txt","r")
            nameCSV=file1.read()
            file1.close()
            try:
                client = pymongo.MongoClient("mongodb+srv://wheelchair:wheelchair@cluster0.pywpd.mongodb.net/myFirstDatabase?retryWrites=true&w=majority")

                #Create database
                mydb = client["mydatabase"]  # you can also use dot notation client.mydatabase
                #Create collection with one insertion
                coll = mydb[nameCSV]
                data = pd.read_csv(nameCSV)
                payload = json.loads(data.to_json(orient='records'))
                coll.insert_many(payload)
                print(coll.count_documents)
                dateUpload = str(datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
                self.label_11.setText(dateUpload)
                file1=open("LastUpload.txt","w")
                file1.write(dateUpload)
                file1.close()   
                # Display the message box
                wm.globalMsgWindow.showMsg(text="The file has been sent successfully",title="Informational Message",callback=[self.enableUpload,None])
    #             self.msg.show()
            except Exception as e:
                print("no internet connection: ",e)
        
    def enableUpload(self):
        """
        This function changes the value of the global variable that enables the upload to True
        """
        global enable_upload
        enable_upload = True
    
    def setupUi(self, MainWindow):
        """
        This function will set up the UI elements that will be present on this window

        :param MainWindow: the window on which to build the elements
        """
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        # Tab Navigation
        self.label_home = qt_helper.makeTabLabel(self,0,0,161,71,152,21,"label_home","Home")
        self.label_charging = qt_helper.makeTabLabel(self,163,0,161,71,152,21,"label_charging","Charging")
        self.label_upload = qt_helper.makeTabLabel(self,326,0,161,71,202,21,"label_charging","Upload")
        self.label_testing = qt_helper.makeTabLabel(self,489,0,161,71,152,21,"label_testing","Test Page")
        

        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(691, 0, 111, 41))
        font = QtGui.QFont()
        font.setPointSize(1)
        self.lcdNumber.setFont(font)
        self.lcdNumber.setProperty("value", 12.0)
        self.lcdNumber.setProperty("intValue", 12)
        self.lcdNumber.setObjectName("lcdNumber")

        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(310, 180, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_12.setFont(font)
        self.label_12.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_12.setStyleSheet("background-color: rgb(0, 130, 0);\n"
"color: rgb(255, 255, 255);\n"
"border-top-left-radius: 35px;\n"
"border-top-right-radius : 35px;\n"
"border-bottom-left-radius :35px;\n"
"border-bottom-right-radius :35px;")
        self.label_12.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(185, 310, 141, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(325, 310, 281, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(170, 310, 451, 61))
        self.frame_2.setStyleSheet("border-color: rgb(0, 0, 0);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(4)
        self.frame_2.setObjectName("frame_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        """
        This function will reassign some components' textual content

        :param MainWindow: the parent window of the target components
        """
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
#         self.label_3.setText(_translate("MainWindow", "Charging"))
#         self.label_5.setText(_translate("MainWindow", "Upload"))
#         self.label_2.setText(_translate("MainWindow", "Home"))
#         self.label_4.setText(_translate("MainWindow", "Test Page"))
        self.label_12.setText(_translate("MainWindow", "Upload Data"))
        self.label_10.setText(_translate("MainWindow", "Last Upload:"))
        
        file1=open("LastUpload.txt","r")
        LastUpload=file1.read()
        file1.close()
        
        self.label_11.setText(_translate("MainWindow", LastUpload))
        
        self.label_12.mouseReleaseEvent = self.sendCSV

if __name__ == "__main__":
    """
    This statement is for testing the file independently
    """
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    wm.globalMsgWindow = wm.MsgWindow()
    ui = Ui_MainWindow4()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
