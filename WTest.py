# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'WindowNew_col.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

#bluetooth
import spidev
import bluetooth
from threading import Thread
import time
import QT_Helpers as qt_helper


class Ui_MainWindow3(object):
    
    def sendStart(self):
        # configure client BT
        bd_addr = "E4:5F:01:41:4D:EA"
        port = 1
        sock=bluetooth.BluetoothSocket( bluetooth.RFCOMM )
        sock.connect((bd_addr, port))

        #https://pypi.org/project/spidev/
        spi = spidev.SpiDev()

        spi.open(0, 0) # Opens the SPI Slave State Port for communication
        spi.mode = 0b11
        spi.bits_per_word = 8
        spi.max_speed_hz = 50000
        datas="2,"+str(self.lineEdit.text())+","+str(self.lineEdit_2.text())
        sock.send(datas)
        receivedD=sock.recv(1024)#
        
        print(receivedD)
        spi.close()
        sock.close()
        
        self.lineEdit.setText("")
        self.lineEdit_2.setText("")
        if receivedD==b'1':
            self.msg1.show()
        if receivedD==b'3':
            self.msg3.show()
        
    def sendStop(self):
        # configure client BT
        bd_addr = "E4:5F:01:41:4D:EA"
        port = 1
        sock=bluetooth.BluetoothSocket( bluetooth.RFCOMM )
        sock.connect((bd_addr, port))

        #https://pypi.org/project/spidev/
        spi = spidev.SpiDev()

        spi.open(0, 0) # Opens the SPI Slave State Port for communication
        spi.mode = 0b11
        spi.bits_per_word = 8
        spi.max_speed_hz = 50000
        datas="3,0,0"
        sock.send(datas)
        receivedD=sock.recv(1024)#
        
        print(receivedD)
        spi.close()
        sock.close()
        
        self.lineEdit.setText("")
        self.lineEdit_2.setText("")
        if receivedD==b'2':
            self.msg2.show()
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        font = QtGui.QFont()
        font.setPointSize(25)
#         self.pushButton = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton.setGeometry(QtCore.QRect(0, 0, 161, 51))
#         self.pushButton.setFont(font)
#         self.pushButton.setObjectName("pushButton")
#         self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
#         self.pushButton_2.setGeometry(QtCore.QRect(180, 0, 161, 51))
#         self.pushButton_2.setFont(font)
#         self.pushButton_2.setObjectName("pushButton_2")
        
        # Tab Navigation:
        self.label_home = qt_helper.makeTabLabel(self,0,0,161,71,152,21,"label_home","Home")
        self.label_charging = qt_helper.makeTabLabel(self,163,0,161,71,152,21,"label_charging","Charging")
        self.label_upload = qt_helper.makeTabLabel(self,326,0,161,71,152,21,"label_charging","Upload")
        self.label_testing = qt_helper.makeTabLabel(self,489,0,161,71,202,21,"label_testing","Test Page")
        
        # Buttons 1-9
        self.numPadButtons = []
        numButtonSize = 80
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,500,330,numButtonSize,numButtonSize,14,'Pin0','0'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,420,250,numButtonSize,numButtonSize,14,'Pin1','1'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,500,250,numButtonSize,numButtonSize,14,'Pin2','2'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,580,250,numButtonSize,numButtonSize,14,'Pin3','3'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,420,170,numButtonSize,numButtonSize,14,'Pin4','4'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,500,170,numButtonSize,numButtonSize,14,'Pin5','5'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,580,170,numButtonSize,numButtonSize,14,'Pin6','6'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,420,90,numButtonSize,numButtonSize,14,'Pin7','7'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,500,90,numButtonSize,numButtonSize,14,'Pin8','8'))
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,580,90,numButtonSize,numButtonSize,14,'Pin9','9'))
        
        for idx,btn in enumerate(self.numPadButtons):
            btn.clicked.connect(lambda state, x=idx: self.enterNum(x))
            
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,580,330,numButtonSize,numButtonSize,14,'PinDec','.'))
        self.numPadButtons[-1].clicked.connect(self.decimalPin)
        self.numPadButtons.append(qt_helper.makeButton(self.centralwidget,420,330,numButtonSize,numButtonSize,14,'PinClr','Clear'))
        self.numPadButtons[-1].clicked.connect(self.clearPin)
        
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_pic1 = QtWidgets.QLabel(self.centralwidget)
        self.label_pic1.setGeometry(QtCore.QRect(620, 360, 180, 90))
        self.label_pic1.setText("")
        self.label_pic1.setObjectName("label_pic1")
#         self.label = QtWidgets.QLabel(self.centralwidget)
#         self.label.setGeometry(QtCore.QRect(360, 0, 471, 81))
#         font = QtGui.QFont()
#         font.setPointSize(25)
#         self.label.setFont(font)
#         self.label.setObjectName("label")
        font = QtGui.QFont()
        font.setPointSize(15)
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(16, 250, 150, 61))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.setFont(font)
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(181, 250, 150, 61))
        self.pushButton_7.setFont(font)
        self.pushButton_7.setObjectName("pushButton_7")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(140, 100, 191, 51))
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.mousePressEvent = (lambda state, x=self.lineEdit: self.setLineFocus(x))
        
        self.lineEditFocus = self.lineEdit
        
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(140, 170, 191, 51))
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_2.mousePressEvent = (lambda state, x=self.lineEdit_2: self.setLineFocus(x))
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 120, 100, 50))
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 180, 100, 50))
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(90, 370, 101, 51))
#         font = QtGui.QFont()
#         font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(80, 330, 191, 91))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(180, 340, 101, 31))
#         font = QtGui.QFont()
#         font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(90, 330, 101, 51))
#         font = QtGui.QFont()
#         font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(180, 380, 101, 31))
#         font = QtGui.QFont()
#         font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        
        
        #create message box
        self.msg = QMessageBox()
        # Set the information icon
        self.msg.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg.setText("The data is sent successfully.")
        # Set the title of the window
        self.msg.setWindowTitle("Informational Message")
        
        #create message box
        self.msg1 = QMessageBox()
        # Set the information icon
        self.msg1.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg1.setText("Charging started")
        # Set the title of the window
        self.msg1.setWindowTitle("Informational Message")
        
        #create message box
        self.msg2 = QMessageBox()
        # Set the information icon
        self.msg2.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg2.setText("Charging stopped")
        # Set the title of the window
        self.msg2.setWindowTitle("Informational Message")
        
        #create message box
        self.msg3 = QMessageBox()
        # Set the information icon
        self.msg3.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg3.setText("IV error.")
        # Set the title of the window
        self.msg3.setWindowTitle("Informational Message")

        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def setLineFocus(self,lineObj):
        self.lineEditFocus = lineObj

    def enterNum(self,n):
        self.lineEditFocus.setText(self.lineEditFocus.text()+str(n))
#         if self.lineEdit.hasFocus():
#             self.lineEdit.setText(self.lineEdit.text()+str(n))
#         if self.lineEdit_2.hasFocus():
#             self.lineEdit_2.setText(self.lineEdit_2.text()+str(n))

    def decimalPin(self):
        if '.' not in self.lineEditFocus.text():
            self.lineEditFocus.setText(self.lineEditFocus.text()+".")
            
    def clearPin(self):
        self.lineEditFocus.setText("")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
#         self.pushButton.setText(_translate("MainWindow", "Home"))
#         self.label.setText(_translate("MainWindow", "This is testing page"))
        self.pushButton_6.setText(_translate("MainWindow", "Stop Charging"))
        self.pushButton_7.setText(_translate("MainWindow", "Start Charging"))
        self.label_2.setText(_translate("MainWindow", "Current (A)"))
        self.label_3.setText(_translate("MainWindow", "Voltage (V)"))
        self.label_4.setText(_translate("MainWindow", "Current:"))
        self.label_5.setText(_translate("MainWindow", "0 V"))
        self.label_6.setText(_translate("MainWindow", "Voltage:"))
        self.label_7.setText(_translate("MainWindow", "0 A"))
#         self.pushButton_2.setText(_translate("MainWindow", "Charging"))
        
        self.pushButton_7.clicked.connect(self.sendStart)
        self.pushButton_6.clicked.connect(self.sendStop)
        
        #To update battery level and temperature readings
        t = Thread(target = self._readParam)
        t.start()
        
    def _readParam(self):
        V = 0
        I = 100
        while True:
            
            f = open("WriteGUIBMS.txt","r")
            listOfData = f.read().split(',')
            f.close()
            #Temperature 1 and 2 of battery
            num1 = float(listOfData[0])
            num1 = int(num1)
            num2 = float(listOfData[2])
            num2 = int(num2)
            self.label_5.setText(str(listOfData[0])+" V")
            self.label_7.setText(str(listOfData[2])+" A")
            time.sleep(5)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow3()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
