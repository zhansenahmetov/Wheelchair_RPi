# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Window2_col_new.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from threading import Thread
#Bluetooth
from bluedot.btcomm import BluetoothClient
import time
import QT_Helpers as qt_helper

bd_addr = "E4:5F:01:41:4D:EA"


disableC_R=0
disableR=0
connectedCheck = 0
connectingCheck = 0
chargingCheck = 0
chargingAccepted = 0
listB = []
#IV char of battery
Inom=9
Vnom=15
StringStyle="border-top-left-radius: 35px;\n border-top-right-radius : 35px;\n border-bottom-left-radius :35px;\n border-bottom-right-radius :35px;"

class Ui_MainWindow2(object):
    global listB, Inom, Vnom

    def data_received(data):
        global charginCheck
        print(data)
        if(int(data)==11):
            listB[1].msg.show()
        if chargingCheck==1 and int(data)==2:
            self.StartStopCharge()
            
    def connect_BLU(self,c):
        
        c.connect()
        
        qt_helper.makeMsgBox("Informational Message","Successfully connected to charger.").exec()

#         #create message box
#         self.msg11 = QMessageBox()
#         # Set the information icon
#         self.msg11.setIcon(QMessageBox.Information)
#         # Set the main message
#         self.msg11.setText("Successfully connected to charger.")
#         # Set the title of the window
#         self.msg11.setWindowTitle("Informational Message")
# 
#         self.msg11.show()
        
        
        #self.msg2.show()
        #print(self.msg11.Ok)
        #time.sleep(2)
        #self.msg11.close()
        

        
    def disconnect_BLU(self,c):
        c.disconnect()
        
    def send_BLU(self,c,data):
        c.send(data)
    
    c = BluetoothClient(bd_addr,data_received, auto_connect=False)
    listB.append(c)
    
    #print(listB[0])
    #connect_BLU(c)
    #c.send("3,1,1")

    

    def setupUi(self, MainWindow2):
        MainWindow2.setObjectName("MainWindow2")
        MainWindow2.resize(800, 480)
        listB.append(self)
        self.centralwidget = QtWidgets.QWidget(MainWindow2)
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(620, 120, 171, 81))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.progressBar.setFont(font)
        self.progressBar.setStyleSheet("")
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        #Make it green and align to center
        self.progressBar.setStyleSheet("QProgressBar::chunk"
                                       "{"
                                       "background-color: rgb(0,205,0);"
                                       "}")
        self.progressBar.setAlignment(QtCore.Qt.AlignCenter)
        #End of progress bar settings
        
        # Tab Navigation
        self.label_home = qt_helper.makeTabLabel(self,0,0,161,71,152,21,"label_home","Home")
        self.label_charging = qt_helper.makeTabLabel(self,163,0,161,71,202,21,"label_charging","Charging")
        self.label_upload = qt_helper.makeTabLabel(self,326,0,161,71,152,21,"label_charging","Upload")
        self.label_testing = qt_helper.makeTabLabel(self,489,0,161,71,152,21,"label_testing","Test Page")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(620, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lcdNumber = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(620, 230, 131, 51))
        self.lcdNumber.setObjectName("lcdNumber")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(620, 210, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.lcdNumber_2 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_2.setGeometry(QtCore.QRect(620, 310, 131, 51))
        self.lcdNumber_2.setObjectName("lcdNumber_2")
        self.label_request = QtWidgets.QLabel(self.centralwidget)
        self.label_request.setGeometry(QtCore.QRect(190, 340, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_request.setFont(font)
        self.label_request.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_request.setStyleSheet("\n"
"background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);\n"
"border-top-left-radius: 35px;\n"
"border-top-right-radius : 35px;\n"
"border-bottom-left-radius :35px;\n"
"border-bottom-right-radius :35px;")
        self.label_request.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_request.setAlignment(QtCore.Qt.AlignCenter)
        self.label_request.setObjectName("label_request")
        self.label_start = QtWidgets.QLabel(self.centralwidget)
        self.label_start.setGeometry(QtCore.QRect(370, 340, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_start.setFont(font)
        self.label_start.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_start.setStyleSheet("background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);\n"
"border-top-left-radius: 35px;\n"
"border-top-right-radius : 35px;\n"
"border-bottom-left-radius :35px;\n"
"border-bottom-right-radius :35px;")
        self.label_start.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_start.setAlignment(QtCore.Qt.AlignCenter)
        self.label_start.setObjectName("label_start")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(10, 130, 181, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(620, 290, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_connect = QtWidgets.QLabel(self.centralwidget)
        self.label_connect.setGeometry(QtCore.QRect(10, 340, 171, 71))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_connect.setFont(font)
        self.label_connect.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_connect.setStyleSheet("background-color: rgb(0, 130, 0);\n"
"color: rgb(255, 255, 255);\n"
"border-top-left-radius: 35px;\n"
"border-top-right-radius : 35px;\n"
"border-bottom-left-radius :35px;\n"
"border-bottom-right-radius :35px;")
        self.label_connect.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_connect.setAlignment(QtCore.Qt.AlignCenter)
        self.label_connect.setObjectName("label_connect")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(5, 125, 451, 61))
        self.frame.setStyleSheet("border-color: rgb(0, 0, 0);")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setLineWidth(4)
        self.frame.setObjectName("frame")
        self.lcdNumber_3 = QtWidgets.QLCDNumber(self.centralwidget)
        self.lcdNumber_3.setGeometry(QtCore.QRect(690, 0, 111, 41))
        font = QtGui.QFont()
        font.setPointSize(1)
        self.lcdNumber_3.setFont(font)
        self.lcdNumber_3.setProperty("value", 12.0)
        self.lcdNumber_3.setProperty("intValue", 12)
        self.lcdNumber_3.setObjectName("lcdNumber_3")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(10, 200, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(220, 200, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        self.label_15.setGeometry(QtCore.QRect(190, 130, 251, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(5, 200, 451, 61))
        self.frame_2.setStyleSheet("border-color: rgb(0, 0, 0);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setLineWidth(4)
        self.frame_2.setObjectName("frame_2")
#         self.label_4 = QtWidgets.QLabel(self.centralwidget)
#         self.label_4.setGeometry(QtCore.QRect(0, 0, 161, 71))
#         font = QtGui.QFont()
#         font.setPointSize(21)
#         self.label_4.setFont(font)
#         self.label_4.setLayoutDirection(QtCore.Qt.LeftToRight)
#         self.label_4.setStyleSheet("color: rgb(0, 0, 0);\n"
# "background-color: rgb(152, 152, 152);")
#         self.label_4.setFrameShape(QtWidgets.QFrame.NoFrame)
#         self.label_4.setAlignment(QtCore.Qt.AlignCenter)
#         self.label_4.setObjectName("label_4")
#         self.label_5 = QtWidgets.QLabel(self.centralwidget)
#         self.label_5.setGeometry(QtCore.QRect(163, 0, 161, 71))
#         font = QtGui.QFont()
#         font.setPointSize(21)
#         self.label_5.setFont(font)
#         self.label_5.setLayoutDirection(QtCore.Qt.LeftToRight)
#         self.label_5.setStyleSheet("\n"
# "color: rgb(0, 0, 0);\n"
# "background-color: rgb(202, 202, 202);\n"
# "\n"
# "\n"
# "")
#         self.label_5.setFrameShape(QtWidgets.QFrame.NoFrame)
#         self.label_5.setAlignment(QtCore.Qt.AlignCenter)
#         self.label_5.setObjectName("label_5")
#         self.label_8 = QtWidgets.QLabel(self.centralwidget)
#         self.label_8.setGeometry(QtCore.QRect(326, 0, 161, 71))
#         font = QtGui.QFont()
#         font.setPointSize(21)
#         self.label_8.setFont(font)
#         self.label_8.setLayoutDirection(QtCore.Qt.LeftToRight)
#         self.label_8.setStyleSheet("color: rgb(0, 0, 0);\n"
# "background-color: rgb(152, 152, 152);")
#         self.label_8.setFrameShape(QtWidgets.QFrame.NoFrame)
#         self.label_8.setAlignment(QtCore.Qt.AlignCenter)
#         self.label_8.setObjectName("label_8")
#         self.label_13 = QtWidgets.QLabel(self.centralwidget)
#         self.label_13.setGeometry(QtCore.QRect(489, 0, 161, 71))
#         font = QtGui.QFont()
#         font.setPointSize(21)
#         self.label_13.setFont(font)
#         self.label_13.setLayoutDirection(QtCore.Qt.LeftToRight)
#         self.label_13.setStyleSheet("color: rgb(0, 0, 0);\n"
# "background-color: rgb(152, 152, 152);")
#         self.label_13.setFrameShape(QtWidgets.QFrame.NoFrame)
#         self.label_13.setAlignment(QtCore.Qt.AlignCenter)
#         self.label_13.setObjectName("label_13")
        MainWindow2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow2.setMenuBar(self.menubar)
        
        
        
        
        #create message box
        self.msg = QMessageBox()
        # Set the information icon
        self.msg.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg.setText("Successfully connected to charger.")
        # Set the title of the window
#         self.msg.setWindowTitle("Informational Message")
        
        #create message box
        self.msg1 = QMessageBox()
        # Set the information icon
        self.msg1.setIcon(QMessageBox.Information)
        # Set the main message
        self.msg1.setText("Charger is not available now.")
        # Set the title of the window
        self.msg1.setWindowTitle("Informational Message")
        
#         self.msg2 = qt_helper.makeMsgBox(title="Informational Message",text="Charging request has been accepted.")
                
#         #create message box
#         self.msg2 = QMessageBox()
#         
#         # Set the information icon
#         self.msg2.setIcon(QMessageBox.Information)
#         # Set the main message
#         self.msg2.setText("Charging request is accepted.")
#         # Set the title of the window
#         self.msg2.setWindowTitle("Informational Message")
#                  
#                 
#         self.msg3 = qt_helper.makeMsgBox(title="Error Message",text="Reference Error, charging is not accepted.",icon=QMessageBox.Warning)
        
#         #create message box
#         self.msg3 = QMessageBox()
#         # Set the information icon
#         self.msg3.setIcon(QMessageBox.Information)
#         # Set the main message
#         self.msg3.setText("IV error, charging is not accepted.")
#         # Set the title of the window
#         self.msg3.setWindowTitle("Error Message")
        
#         self.msg4 = qt_helper.makeMsgBox(title="Informational Message",text="Charging successfully started.")
#         
#         #create message box
#         self.msg4 = QMessageBox()
#         # Set the information icon
#         self.msg4.setIcon(QMessageBox.Information)
#         # Set the main message
#         self.msg4.setText("Charging successfully started.")
#         # Set the title of the window
#         self.msg4.setWindowTitle("Informational Message")
#         
#         self.msg5 = qt_helper.makeMsgBox(title="Informational Message",text="Charging stopped.")
        
#         #create message box
#         self.msg5 = QMessageBox()
#         # Set the information icon
#         self.msg5.setIcon(QMessageBox.Information)
#         # Set the main message
#         self.msg5.setText("Charging stopped.")
#         # Set the title of the window
#         self.msg5.setWindowTitle("Informational Message")
        

        #Three buttons function declaration
        self.label_request.mouseReleaseEvent = self.RequestCharging
        self.label_start.mouseReleaseEvent = self.StartStopCharge
        self.label_connect.mouseReleaseEvent = self.ConnectToCharger
        
        #print(listB[0])
        #self.connect_BLU(listB[0])
        #self.send_BLU(listB[0],"3,1,1")
        



        self.retranslateUi(MainWindow2)
        QtCore.QMetaObject.connectSlotsByName(MainWindow2)

    def retranslateUi(self, MainWindow2):
        _translate = QtCore.QCoreApplication.translate
        MainWindow2.setWindowTitle(_translate("MainWindow2", "MainWindow"))
        self.label.setText(_translate("MainWindow2", "Battery Level"))
        self.label_2.setText(_translate("MainWindow2", "Battery 1 temp (C)"))
        self.label_request.setText(_translate("MainWindow2", "Request Charging"))
        self.label_start.setText(_translate("MainWindow2", "Start Charging"))
        self.label_9.setText(_translate("MainWindow2", "Charger nearby:"))
        self.label_3.setText(_translate("MainWindow2", "Battery 2 temp (C)"))
        self.label_connect.setText(_translate("MainWindow2", "Connect"))
        self.label_10.setText(_translate("MainWindow2", "Connection status:"))
        self.label_11.setText(_translate("MainWindow2", "Disconnected"))
        self.label_15.setText(_translate("MainWindow2", "Charger #1 (Centennial)"))
#         self.label_4.setText(_translate("MainWindow2", "Home"))
#         self.label_5.setText(_translate("MainWindow2", "Charging"))
#         self.label_8.setText(_translate("MainWindow2", "Upload"))
#         self.label_13.setText(_translate("MainWindow2", "Test Page"))
        
        t = Thread(target = self._readParam)
        t.start()
        
    def _readParam(self):
        V = 0
        I = 100
        while True:
            
            f = open("WriteGUIBMS.txt","r")
            listOfData = f.read().split(',')
            f.close()
            #Temperature 1 and 2 of battery
            num1 = float(listOfData[3])
            num1 = int(num1)
            num2 = float(listOfData[4])
            num2 = int(num2)
            
            self.lcdNumber.display(num1)
            self.lcdNumber_2.display(num2)
            #Battery (now SoC)
            num3 = float(listOfData[6])
            num3 = int(num3)
            self.progressBar.setProperty("value", num3)
            time.sleep(5)
            

        
        
        
    def StartStopCharge(self, event):
        global chargingCheck
        global connectedCheck
        global chargingAccepted,disableR,disableC_R
        if connectedCheck==1&chargingAccepted==1:
            if chargingCheck==0:
                data="2,"+str(Inom)+","+str(Vnom)
                self.send_BLU(listB[0],data)
                print("start")
                self.label_start.setStyleSheet("background-color: rgb(222, 0, 0);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                self.label_connect.setStyleSheet("background-color: rgb(202, 202, 202);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                disableC_R=1
                self.label_start.setText("Stop Charging")
                chargingCheck=1
#                 self.msg4.exec()
                qt_helper.makeMsgBox(title="Informational Message",text="Charging successfully started.")
                self.label_11.setText("Charging in progress")
            else:
                data="3,"+str(Inom)+","+str(Vnom)
                chargingCheck=0
                self.send_BLU(listB[0],data)
                print("stop")
                self.label_start.setStyleSheet("background-color: rgb(0, 130, 0);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                self.label_connect.setStyleSheet("background-color: rgb(222, 0, 0);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                disableC_R=0
                self.label_start.setText("Start Charging")
                
#                 self.msg5.exec()
                qt_helper.makeMsgBox(title="Informational Message",text="Charging stopped.")
                self.label_11.setText("Connected to charger")
    
    def DisconnectFromCharger(self,event=None):
        print("Abandoning connection process")
        global disableC_R
        global connectedCheck
        disableC_R = 0
        connectedCheck = 1
        self.ConnectToCharger()
    
    def connectedCallback(self):
        self.label_11.setText("Connected to charger")
        self.label_connect.setStyleSheet("background-color: rgb(222, 0, 0);\n"
"color: rgb(255, 255, 255);"+StringStyle)
        self.label_request.setStyleSheet("background-color: rgb(0, 130, 0);\n"
"color: rgb(255, 255, 255);"+StringStyle)
    
    def ConnectToCharger(self,event=None):
        global connectedCheck
        global connectingCheck
        global chargingCheck
        global disableC_R,disableR,chargingAccepted
        if connectedCheck==0 and disableC_R==0:
            connectingCheck = 1;
            
            print("Connecting High")
            self.label_connect.setStyleSheet("background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);"+StringStyle)
            testFunc = qt_helper.Parallel(self.connect_BLU,listB[0],self.connectedCallback,self.DisconnectFromCharger)
            testFunc.start()
#             self.connect_BLU(listB[0])
            self.label_request.setStyleSheet("background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);"+StringStyle)
            print("connecting")
            disableR=1
            #self.label_connect.setStyleSheet("background-color: rgb(222, 0, 0);\n"
#"color: rgb(255, 255, 255);"+StringStyle)
            self.label_connect.setText("Disconnect")
            #self.msg.show()
            self.label_11.setText("Connecting to charger...")
        elif disableC_R==0:
            self.disconnect_BLU(listB[0])
            connectedCheck=0
            connectingCheck=0
            disableR=0
            chargingAccepted=0
            chargingCheck = 0
            self.label_request.setStyleSheet("background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);"+StringStyle)
            self.label_start.setStyleSheet("background-color: rgb(202, 202, 202);\n"
"color: rgb(255, 255, 255);"+StringStyle)
            self.label_connect.setStyleSheet("background-color: rgb(0, 130, 0);\n"
"color: rgb(255, 255, 255);"+StringStyle)
            self.label_connect.setText("Connect")
            self.label_start.setText("Start Charging")
            self.label_11.setText("Disconnected")
#             QtWidgets.QApplication.processEvents()
            self.repaint()
            self.parentWidget().repaint()
    
        
    
    def RequestCharging(self,event):
        global chargingAccepted
        global connectedCheck
        global disableC_R,disableR
        if connectedCheck==1 and disableC_R==0 and disableR==0:
            data="6,"+str(Inom)+","+str(Vnom)
            self.send_BLU(listB[0],data)
            print("requested")
            chargingAccepted=1
            if chargingAccepted==1:
                self.label_start.setStyleSheet("background-color: rgb(0, 130, 0);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                self.label_request.setStyleSheet("background-color: rgb(202, 202, 202);\n"
    "color: rgb(255, 255, 255);"+StringStyle)
                disableR=1
                qt_helper.makeMsgBox(title="Informational Message",text="Charging request has been accepted.")
                



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow2 = QtWidgets.QMainWindow()
    ui = Ui_MainWindow2()
    ui.setupUi(MainWindow2)
    MainWindow2.showFullScreen()
    sys.exit(app.exec_())
